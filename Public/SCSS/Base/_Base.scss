@use "../../../Public/SCSS/Utilities/Mixins" as *;
@use "../../../Public/SCSS/Utilities/Variables" as *;

/*
    //////////////////////////////////
    /// To Do List:

    MUSTDO : Record A Short Video finishing my introduction on the About Section.
    MUSTDO : Push what I have to Namecheap.com on my domain listed as Purenspiration.com
    MUSTDO : Finish by doing a final review, add, commit, & push to my local repo to be sure of what is needed there.
    MUSTDO : Update my links on the project cards & re-push to Namecheap.com for my site.
    MUSTDO : Clean up code on my site to make it both readable & still efficient WHILE applying for jobs.
    MUSTDO : Again, while applying for jobs, I will be needing to make my ste much more mobile friendly.  This will be done by refreshing my mind on what CSS I need to be doing in order for that to be achieved.
    MUSTDO : While applying for jobs, keep working on the budget site & reset these goals on the base scss file for that budget.
    
    
    //////////////////////////////////
    /// Glitches To Fix

    //////////////////////////////////
    /// Adjustments To Make

    ADJUST : Remove Arrow Functions from Methods.
    ADJUST : Refactor Code to make it so functions / methods only use up to 5 parameters max.


    //////////////////////////////////
    /// Features To Implement

    FEATURE : Responsive Design according to the screen that is used by the client.
*/

//////////////////////////////////
///  Foundation Settings

*,
*::before,
*:after {
  margin: 0;
  padding: 0;
  box-sizing: inherit;
}

html {
  // This defines what 1rem should be
  font-size: 62.5%;
  scroll-behavior: smooth;
}

body {
  box-sizing: border-box;
  @include SizingItem(relative, 100%, 100vw);
  background-color: $colorDarkestGrey;
  overflow-x: hidden;
}

////////////////////////////////////////////////
//  Vertical Flex Container

.vertical-flex-container {
  background-color: $colorDarkestGrey;

  ////////////////////////////////////////////////
  //  Navigation

  ////////////////////////////////////////////////
  //  Flex Section
  .flex-section {
    &:not(:first-of-type) {
      border-top: 0.2rem groove rgba($colorDarkerGrey, 0.8);
    }

    .grid-container {
      .typing-text-container {
        @include SizeAndPositioning(relative, 100%, 100%, flex, center, center, 0, 0, 0);
        padding: 0 5rem;
        // background-color: rgba($colorSilver, .25); // I intend on removing this background color for consumers.  I need to know where the limits are.

        .typing-text--cursor {
          @include SizingItem(relative, 50%, 0.8rem);
          background-color: $secondaryColor;
          margin-left: 1rem;
          animation: blink 0.75s step-end infinite;
        }
      }

      .introduction-button-container {
        @include SizeAndPositioning(relative, 100%, 100%, flex, space-evenly, center, 0, 0, 0);
      }

      .about-me-container {
        @include SizeAndPositioning(relative, 100%, 100%, flex, space-evenly, center, 0, 0, 0);
        flex-direction: column;

        &__option-slider {
          @include SizeAndPositioning(relative, 75%, 100%, flex, stretch, center, 0, 0, 0);
          flex-direction: row;
          overflow: hidden;

          &--option {
            @include SizeAndPositioning(absolute, 100%, 100%, flex, center, center, 0, 0, 0);
            top: 0;
            .about-typing-text-container {
              @include SizeAndPositioning(relative, 30.14%, 100%, flex, center, center, 0, 0, 0);
              padding: 0 5rem;
              .about-typing-text--cursor {
                @include SizingItem(relative, 70%, 0.8rem);
                background-color: $secondaryColor;
                margin-left: 1rem;
                animation: blink 0.75s step-end infinite;
              }
            }
            .about-me-video {
              @include SizingItem(relative, 100%, 60%);
            }

            &--2 {
              transform: translateX(100%);
            }

            &--1,
            &--2 {
              transition: transform 1s;
            }
          }
        }
        &__option-navigation {
          @include SizeAndPositioning(relative, 25%, 100%, flex, center, flex-start, 0, 0, 0);
          padding: 3rem;

          &__dot {
            @include SizingItem(relative, 2rem, 2rem);
            border: none;
            border-radius: 50%;
            background-color: rgba($colorGrey, 0.5);
            margin: 0 1rem;

            &:hover {
              cursor: pointer;
              background-color: rgba($colorDarkGrey, 0.8);
            }

            &--active {
              background-color: $colorDarkerGrey;
              &:hover {
                background-color: $colorDarkerGrey;
              }
            }
          }
        }
      }

      .section-header {
        @include SizeAndPositioning(relative, 100%, 100%, flex, center, center, 0, 0, 0);
      }

      .showcase-grid {
        @include SizeAndPositioning(relative, 100%, 100%, grid, center, center, 0, 0, 0);
        @include gridLayout(100%, 100%, 1fr, 1fr, 0, 0);
        @include gridPlacement(1, 1, 1, 1);
        overflow: hidden;
        justify-items: center;

        .skill-card {
          // @include SizeAndPositioning(absolute, 60%, 26rem, flex, space-evenly, center, 0, 0, 0);
          @include SizeAndPositioning(relative, 60%, 24rem, flex, center, center, 0, 0, 0);
          right: 0;
          flex-direction: column;
          padding: 2rem;
          border-radius: 1rem;
          background-color: rgba($colorLighterGrey, 0.8);
          opacity: 0.5;
          margin: 0 2rem;

          transition: opacity 1s, transform 1s;

          &--current {
            justify-self: center;
            transform: translateY(-8%);
          }

          .skill-image-container {
            @include SizeAndPositioning(relative, 75%, 100%, flex, center, center, 0, 0, 0);
            margin-bottom: 2rem;
            background-color: $secondaryColor;
            img,
            p {
              @include SizingItem(relative, 80%, 80%);
              filter: brightness(0) invert(1);
            }
          }

          .skill-title-container {
            @include SizeAndPositioning(relative, 25%, 100%, flex, center, center, 0, 0, 0);
          }

          &:hover,
          &:active {
            cursor: pointer;
            opacity: 1;
            left: 0;
          }
        }

        .project-card {
          @include SizeAndPositioning(relative, 80%, 60%, flex, center, center, 0, 0, 0);
          background-color: rgba($colorDarkGrey, 0.25);
          padding: 4rem;
          transition: opacity 1s, transform 1s;
          &-cover {
            @include SizeAndPositioning(relative, 100%, 45%, flex, space-evenly, center, 0, 0, 0);
            flex-direction: column;
            &-image-container {
              @include SizeAndPositioning(relative, 75%, 100%, flex, center, center, 0, 0, 0);
              background-color: rgba($colorOffWhite, 0.25);
              img {
                @include SizingItem(relative, 100%, 100%);
                object-fit: cover;
              }
            }
            &-title-container {
              @include SizeAndPositioning(relative, 25%, 100%, flex, center, center, 0, 0, 0);
            }
          }
          &-content {
            @include SizeAndPositioning(relative, 100%, 55%, flex, space-evenly, center, 0, 0, 0);
            flex-direction: column;
            padding-left: 4rem;
            &-description-container {
              @include SizeAndPositioning(relative, 75%, 100%, flex, flex-start, center, 0, 0, 0);
              background-color: rgba($colorOffWhite, 0.5);
              flex-direction: column;
              padding: 2rem;
              text-indent: 2rem;
              overflow-y: auto;
              word-wrap: break-word;
            }
            &-link-container {
              @include SizeAndPositioning(relative, 25%, 100%, flex, space-evenly, center, 0, 0, 0);
              &--link {
                @include SizeAndPositioning(relative, 60%, 40%, flex, center, center, 0, 0, 0);
                border: 0.2rem groove rgba($secondaryColor, 0.8);
                border-radius: 5rem;
                transform: translateY(1rem);
                background-color: transparent;
                z-index: 3;
                &:hover {
                  cursor: pointer;
                  background-color: $secondaryColor;
                  transition: background-color 0.5s, color 0.5s;
                }
              }
            }
          }
          &-work-in-progress {
            &::after {
              @include SizingItem(absolute, 25%, 100%);
              display: flex;
              justify-content: center;
              align-items: center;
              content: 'NOTICE: Work In Progress';
              background-color: rgba($colorDarkestGrey, 0.55);
            }
          }
        }
      }

      .dots {
        @include SizeAndPositioning(relative, 100%, 100%, flex, center, center, 0, 0, 0);
        &__dot {
          @include SizingItem(relative, 2rem, 2rem);
          background-color: rgba($colorLighterGrey, 0.8);
          border: none;
          border-radius: 50%;
          margin: 0 2rem;
          &--active {
            background-color: $colorDarkerGrey;
          }
        }
      }
      .project-count {
        @include SizeAndPositioning(relative, 100%, 100%, flex, center, center, 0, 0, 0);
      }
    }
  }
}
