@use '../../../Public/SCSS/Utilities/Mixins' as *;
@use '../../../Public/SCSS/Utilities/Variables' as *;

.navigation-connection-button {
  margin-right: 2rem;
}

.button {
  &--navigation {
    @include SizeAndPositioning(absolute, max-content, max-content, flex, row, nowrap, center, center, -50%, 0, 0);
    top: 0;
    left: 50%;
    padding: 2rem;
    border: 0.3rem solid rgba($secondaryColor, 0.5);
    border-bottom-left-radius: 1rem;
    border-bottom-right-radius: 1rem;
    background-color: rgba($secondaryColor, 0.5);
    z-index: 10;
    &:hover {
      cursor: pointer;
      border-color: $secondaryColor;
      background-color: $secondaryColor;
      transition: color 0.5s, background-color 0.5s, border 0.5s;
    }
  }

  &--cta {
    @include SizeAndPositioning(relative, 5rem, max-content, flex, row, nowrap, center, center, 0, 0, 0);
    padding: 2rem;
    border-radius: 0.5rem;
    border: none;
    box-shadow: inset 0 0 0 0.3rem rgba($colorOffWhite, 0.25);
    background-color: rgba($colorOffWhite, 0.125);
    vertical-align: middle;

    &__text {
      @include SizingItem(relative, max-content, max-content);
      z-index: 5;
    }

    &::before {
      box-sizing: inherit;
      content: '';
      position: absolute;
      width: 0%;
      height: 25%;
      top: 50%;
      left: 0;
      transform: translateY(-50%);
      border: 0.2rem solid transparent;
      border-radius: 0.5rem;
    }
    &::after {
      box-sizing: inherit;
      content: '';
      position: absolute;
      width: 0%;
      height: 25%;
      top: 50%;
      right: 0;
      transform: translateY(-50%);
      border-right: 0.2rem solid transparent;
      background-color: transparent;
      border-radius: 0.5rem;
    }
    &:hover {
      cursor: pointer;
      transition: color 0.5s 0.75s;

      &::before {
        top: 0;
        transform: translateY(0);
        height: 100%;
        width: 100%;
        border-left-color: $primaryColor;
        border-top-color: $primaryColor;
        border-bottom-color: $primaryColor;
        border-radius: 0.5rem;
        transition: border 0.125s 0s, height 0.25s 0s, transform 0.25s 0s, top 0.25s 0s, width 0.3s 0.25s;
      }
      &::after {
        height: 100%;
        width: 100%;
        border-radius: 0.5rem;
        border-right-color: $primaryColor;
        background-color: $primaryColor;
        display: flex;
        justify-content: center;
        align-items: center;
        transition: background-color 0.5s 0.75s, border 0.125s 0.75s, border-color 0.125s 0.5s, height 0.25s 0.5s, width 0.25s 0.75s;
      }
    }
  }
  &--hero {
    transform: translate(34rem, -1.5rem);
  }
  &--about-doors {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    z-index: 10;
  }

  &--send {
    @include SizeAndPositioning(relative, max-content, max-content, flex, row, nowrap, center, center, 0, 0, 0);
    bottom: -3rem;
    right: -13.5rem;
    padding: 1rem 2rem;
    border-radius: 1rem;
    z-index: 5;

    background-color: rgba($secondaryColor, 0.75);
    border: 0.2rem solid rgba($secondaryColor, 0.8);
    &:hover {
      cursor: pointer;
      background-color: $secondaryColor;
      border-color: $secondaryColor;
      transition: background-color 0.5s, color 0.5s, border 0.5s;
    }

    &:active {
      background-color: $primaryColor;
      border-color: $primaryColor;
    }
  }

  &--modal {
    @extend .button;
    @include SizeAndPositioning(relative, max-content, max-content, flex, row, nowrap, center, center, 0, 0, 0);
    padding: 1rem 2rem;
    background-color: transparent;
    border-radius: 5rem;
    margin-bottom: 3rem;
    &:hover {
      transition: background-color 0.5s, border 0.5s, color 0.5s;
    }
  }
  &:hover {
    cursor: pointer;
  }
}
